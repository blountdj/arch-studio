import { CONFIG as e } from "https://cdn.jsdelivr.net/gh/blountdj/arch-studio@v8/min/js/config.min.js"; let { textSplit: t } = await import(`${e.path}${e.folder}js/utilities${e.jsEnd}.js`), defaultItemFlex = "0 1 32px", hoverItemFlex = "1 1 600px"; export const getPortfolioElement = e => ({ portfolioTextHeadings: e.querySelectorAll(".heading-s"), portfolioTextDates: e.querySelectorAll(".paragraph"), gallery: e.querySelector(".gallery"), galleryContainer: e.querySelector(".gallery") }); function getScreenWidth() { return window.innerWidth } export function initPortfolio(e) { let r = getPortfolioElement(e); r.portfolioTextHeadings.forEach(e => { t(e) }), r.portfolioTextDates.forEach(e => { t(e) }); let o = r.galleryContainer.querySelectorAll(".gallery-item"); updategalleryItems("init", o); let l = getScreenWidth(); o.forEach(e => { e.addEventListener("mouseenter", () => { if (l > 767) o.forEach(t => { t.isHovered = t === e }), updategalleryItems("mouseenter", o); else { let t = e.querySelector(".gallery-item-text-wrapper"), r = e.querySelectorAll(".gallery-item-text-wrapper-wrapper > div > .word > .char "); gsap.to(t, { opacity: 1, duration: .15, ease: "power5.inOut" }), setTimeout(() => { staggerFadeLettersIn(r) }, 10) } }), e.addEventListener("mouseleave", () => { if (l > 767) o.forEach(e => { let t = e.querySelector(".gallery-item-text-wrapper"); gsap.to(t, { opacity: 0, duration: .15, ease: "power5.inOut" }) }); else { let t = e.querySelector(".gallery-item-text-wrapper"), r = e.querySelectorAll(".gallery-item-text-wrapper-wrapper > div > .word > .char "); gsap.to(t, { opacity: 0, duration: .15, ease: "power5.inOut" }), gsap.to(r, { color: "transparent", duration: .15, ease: "power5.inOut" }) } }) }), gsap.set(r.gallery, { opacity: 0, yPercent: 50 }) } export function animatePortfolioEnter(e) { let t = e.querySelector(".gallery"); gsap.to(t, { opacity: 1, yPercent: 0, duration: .75, ease: "power4.inOut" }) } let staggerFadeLettersIn = e => { gsap.to(e, { color: "white", duration: .5, ease: "power2.inOut", stagger: { from: "random", each: .02 }, onComplete() { } }) }, updategalleryItems = (e, t) => { t.forEach(t => { let r = t.querySelector(".gallery-item-text-wrapper"), o = t.querySelectorAll(".gallery-item-text-wrapper-wrapper > div > .word > .char "), l = "0 1 32px", a = 0, i = 500; i = "mouseenter" === e ? 750 : 10, t.isHovered ? (l = "1 1 600px", a = 1, setTimeout(() => { staggerFadeLettersIn(o) }, i = 1e3)) : o.forEach(e => { e.style.color = "transparent" }), t.style.flex = l, setTimeout(() => { r.style.opacity = a }, i) }) };